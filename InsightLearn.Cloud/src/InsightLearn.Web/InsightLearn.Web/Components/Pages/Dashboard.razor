@page "/dashboard"
@using InsightLearn.Web.Services
@using InsightLearn.Web.Components.Auth
@using InsightLearn.Web.Components.UI
@inject AuthStateService AuthState
@inject NavigationManager Navigation

<AuthGuard RequiredRole="User">
    <!-- Dashboard Header -->
    <div style="background: var(--udemy-purple); padding: 40px 0; color: white;">
        <div class="container mx-auto">
            <h1 style="font-size: 2.5rem; font-weight: 600; margin-bottom: 10px;">
                Welcome back, @(currentUser?.Name ?? "User")!
            </h1>
            <p style="font-size: 1.2rem; opacity: 0.9;">
                Ready to continue learning?
            </p>
        </div>
    </div>

    <!-- Learning Dashboard -->
    <div class="container mx-auto py-8">
        <!-- Quick Stats -->
        <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); gap: 20px; margin-bottom: 40px;">
            <div style="background: white; padding: 20px; border-radius: 10px; box-shadow: 0 2px 10px rgba(0,0,0,0.1);">
                <div style="color: #6b7280; font-size: 14px; margin-bottom: 8px;">COURSES IN PROGRESS</div>
                <div style="font-size: 32px; font-weight: bold; color: #1c1d1f;">3</div>
            </div>
            <div style="background: white; padding: 20px; border-radius: 10px; box-shadow: 0 2px 10px rgba(0,0,0,0.1);">
                <div style="color: #6b7280; font-size: 14px; margin-bottom: 8px;">COURSES COMPLETED</div>
                <div style="font-size: 32px; font-weight: bold; color: #1c1d1f;">7</div>
            </div>
            <div style="background: white; padding: 20px; border-radius: 10px; box-shadow: 0 2px 10px rgba(0,0,0,0.1);">
                <div style="color: #6b7280; font-size: 14px; margin-bottom: 8px;">CERTIFICATES EARNED</div>
                <div style="font-size: 32px; font-weight: bold; color: #1c1d1f;">4</div>
            </div>
            <div style="background: white; padding: 20px; border-radius: 10px; box-shadow: 0 2px 10px rgba(0,0,0,0.1);">
                <div style="color: #6b7280; font-size: 14px; margin-bottom: 8px;">LEARNING STREAK</div>
                <div style="font-size: 32px; font-weight: bold; color: #1c1d1f;">12 days</div>
            </div>
        </div>

        <!-- Continue Learning -->
        <div style="margin-bottom: 40px;">
            <h2 style="font-size: 24px; font-weight: 600; margin-bottom: 20px;">Continue Learning</h2>
            <div style="display: grid; grid-template-columns: repeat(auto-fill, minmax(300px, 1fr)); gap: 20px;">
                @foreach (var course in continueLearning)
                {
                    <div style="background: white; border-radius: 10px; overflow: hidden; box-shadow: 0 2px 10px rgba(0,0,0,0.1); cursor: pointer;">
                        <img src="@course.ImageUrl" alt="@course.Title" style="width: 100%; height: 160px; object-fit: cover;" />
                        <div style="padding: 15px;">
                            <h3 style="font-size: 16px; font-weight: 600; margin-bottom: 10px;">@course.Title</h3>
                            <div style="margin-bottom: 10px;">
                                <div style="background: #e5e7eb; border-radius: 5px; height: 8px; overflow: hidden;">
                                    <div style="background: var(--udemy-purple); height: 100%; width: @(course.Progress)%;"></div>
                                </div>
                            </div>
                            <div style="font-size: 14px; color: #6b7280;">@course.Progress% complete</div>
                        </div>
                    </div>
                }
            </div>
        </div>

        <!-- Navigation Tabs -->
        <div style="border-bottom: 2px solid #e5e7eb; margin-bottom: 20px;">
            <div style="display: flex; gap: 30px;">
                <button @onclick="() => SetActiveTab(\"courses\")"
                        style="padding: 10px 0; border: none; background: none; font-size: 16px; font-weight: 500; cursor: pointer; position: relative; @(activeTab == \"courses\" ? \"color: var(--udemy-purple);\" : \"color: #6b7280;\")">
                    My Courses
                    @if (activeTab == "courses")
                    {
                        <div style="position: absolute; bottom: -2px; left: 0; right: 0; height: 2px; background: var(--udemy-purple);"></div>
                    }
                </button>
                <button @onclick="() => SetActiveTab(\"achievements\")"
                        style="padding: 10px 0; border: none; background: none; font-size: 16px; font-weight: 500; cursor: pointer; position: relative; @(activeTab == \"achievements\" ? \"color: var(--udemy-purple);\" : \"color: #6b7280;\")">
                    Achievements
                    @if (activeTab == "achievements")
                    {
                        <div style="position: absolute; bottom: -2px; left: 0; right: 0; height: 2px; background: var(--udemy-purple);"></div>
                    }
                </button>
                <button @onclick="() => SetActiveTab(\"wishlist\")"
                        style="padding: 10px 0; border: none; background: none; font-size: 16px; font-weight: 500; cursor: pointer; position: relative; @(activeTab == \"wishlist\" ? \"color: var(--udemy-purple);\" : \"color: #6b7280;\")">
                    Wishlist
                    @if (activeTab == "wishlist")
                    {
                        <div style="position: absolute; bottom: -2px; left: 0; right: 0; height: 2px; background: var(--udemy-purple);"></div>
                    }
                </button>
            </div>
        </div>
    </div>
</AuthGuard>

@code {
    private AuthStateService.UserDto? currentUser;
    private string activeTab = "courses";
    private List<CourseProgress> continueLearning = new();

    protected override async Task OnInitializedAsync()
    {
        currentUser = await AuthState.GetCurrentUserAsync();
        LoadMockData();
    }

    private void SetActiveTab(string tab)
    {
        activeTab = tab;
    }

    private void LoadMockData()
    {
        continueLearning = new List<CourseProgress>
        {
            new CourseProgress { Title = "Complete React Developer", Progress = 65, ImageUrl = "https://via.placeholder.com/300x160" },
            new CourseProgress { Title = "Advanced CSS and Sass", Progress = 40, ImageUrl = "https://via.placeholder.com/300x160" },
            new CourseProgress { Title = "Python for Data Science", Progress = 85, ImageUrl = "https://via.placeholder.com/300x160" }
        };
    }

    private class CourseProgress
    {
        public string Title { get; set; } = "";
        public int Progress { get; set; }
        public string ImageUrl { get; set; } = "";
    }
}