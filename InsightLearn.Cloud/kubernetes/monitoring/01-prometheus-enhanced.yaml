apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: insightlearn-monitoring
  labels:
    app: prometheus
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s
      external_labels:
        cluster: 'insightlearn-cluster'
        environment: 'production'

    rule_files:
      - "/etc/prometheus/rules/*.yml"

    alerting:
      alertmanagers:
        - static_configs:
            - targets:
              - alertmanager.insightlearn-monitoring.svc.cluster.local:9093

    scrape_configs:
      # Prometheus itself
      - job_name: 'prometheus'
        static_configs:
          - targets: ['localhost:9090']
        metrics_path: /metrics
        scrape_interval: 15s

      # Kubernetes API Server
      - job_name: 'kubernetes-apiservers'
        kubernetes_sd_configs:
        - role: endpoints
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
        - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
          action: keep
          regex: default;kubernetes;https

      # Kubernetes Nodes
      - job_name: 'kubernetes-nodes'
        kubernetes_sd_configs:
        - role: node
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
        - action: labelmap
          regex: __meta_kubernetes_node_label_(.+)
        - target_label: __address__
          replacement: kubernetes.default.svc:443
        - source_labels: [__meta_kubernetes_node_name]
          regex: (.+)
          target_label: __metrics_path__
          replacement: /api/v1/nodes/${1}/proxy/metrics

      # Kubernetes Pods
      - job_name: 'kubernetes-pods'
        kubernetes_sd_configs:
        - role: pod
        relabel_configs:
        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
          action: keep
          regex: true
        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
          action: replace
          target_label: __metrics_path__
          regex: (.+)
        - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
          action: replace
          regex: ([^:]+)(?::\d+)?;(\d+)
          replacement: $1:$2
          target_label: __address__
        - action: labelmap
          regex: __meta_kubernetes_pod_label_(.+)
        - source_labels: [__meta_kubernetes_namespace]
          action: replace
          target_label: kubernetes_namespace
        - source_labels: [__meta_kubernetes_pod_name]
          action: replace
          target_label: kubernetes_pod_name

      # InsightLearn API Service
      - job_name: 'insightlearn-api'
        kubernetes_sd_configs:
        - role: endpoints
          namespaces:
            names:
            - insightlearn
        relabel_configs:
        - source_labels: [__meta_kubernetes_service_name]
          action: keep
          regex: insightlearn-api
        - source_labels: [__meta_kubernetes_service_port_name]
          action: keep
          regex: http
        - action: labelmap
          regex: __meta_kubernetes_service_label_(.+)
        - source_labels: [__meta_kubernetes_namespace]
          target_label: kubernetes_namespace
        - source_labels: [__meta_kubernetes_service_name]
          target_label: kubernetes_service_name

      # InsightLearn Web Service
      - job_name: 'insightlearn-web'
        kubernetes_sd_configs:
        - role: endpoints
          namespaces:
            names:
            - insightlearn
        relabel_configs:
        - source_labels: [__meta_kubernetes_service_name]
          action: keep
          regex: insightlearn-web
        - source_labels: [__meta_kubernetes_service_port_name]
          action: keep
          regex: http
        - action: labelmap
          regex: __meta_kubernetes_service_label_(.+)
        - source_labels: [__meta_kubernetes_namespace]
          target_label: kubernetes_namespace
        - source_labels: [__meta_kubernetes_service_name]
          target_label: kubernetes_service_name

      # Database Services
      - job_name: 'postgresql'
        kubernetes_sd_configs:
        - role: endpoints
          namespaces:
            names:
            - insightlearn-data
        relabel_configs:
        - source_labels: [__meta_kubernetes_service_name]
          action: keep
          regex: postgresql
        - action: labelmap
          regex: __meta_kubernetes_service_label_(.+)
        - source_labels: [__meta_kubernetes_namespace]
          target_label: kubernetes_namespace

      - job_name: 'mongodb'
        kubernetes_sd_configs:
        - role: endpoints
          namespaces:
            names:
            - insightlearn-data
        relabel_configs:
        - source_labels: [__meta_kubernetes_service_name]
          action: keep
          regex: mongodb
        - action: labelmap
          regex: __meta_kubernetes_service_label_(.+)
        - source_labels: [__meta_kubernetes_namespace]
          target_label: kubernetes_namespace

      - job_name: 'redis'
        kubernetes_sd_configs:
        - role: endpoints
          namespaces:
            names:
            - insightlearn-data
        relabel_configs:
        - source_labels: [__meta_kubernetes_service_name]
          action: keep
          regex: redis
        - action: labelmap
          regex: __meta_kubernetes_service_label_(.+)
        - source_labels: [__meta_kubernetes_namespace]
          target_label: kubernetes_namespace

      - job_name: 'elasticsearch'
        kubernetes_sd_configs:
        - role: endpoints
          namespaces:
            names:
            - insightlearn-data
        relabel_configs:
        - source_labels: [__meta_kubernetes_service_name]
          action: keep
          regex: elasticsearch
        - action: labelmap
          regex: __meta_kubernetes_service_label_(.+)
        - source_labels: [__meta_kubernetes_namespace]
          target_label: kubernetes_namespace

      # AI Services
      - job_name: 'ollama'
        kubernetes_sd_configs:
        - role: endpoints
          namespaces:
            names:
            - insightlearn-ai
        relabel_configs:
        - source_labels: [__meta_kubernetes_service_name]
          action: keep
          regex: ollama-service
        - action: labelmap
          regex: __meta_kubernetes_service_label_(.+)
        - source_labels: [__meta_kubernetes_namespace]
          target_label: kubernetes_namespace

  alerting_rules.yml: |
    groups:
    - name: insightlearn.rules
      rules:
      # High CPU Usage
      - alert: HighCPUUsage
        expr: (100 - (avg by(instance) (irate(node_cpu_seconds_total{mode="idle"}[5m])) * 100)) > 80
        for: 5m
        labels:
          severity: warning
          service: infrastructure
        annotations:
          summary: "High CPU usage detected on {{ $labels.instance }}"
          description: "CPU usage is above 80% for more than 5 minutes on {{ $labels.instance }}"

      # High Memory Usage
      - alert: HighMemoryUsage
        expr: (1 - (node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes)) * 100 > 85
        for: 5m
        labels:
          severity: warning
          service: infrastructure
        annotations:
          summary: "High memory usage detected on {{ $labels.instance }}"
          description: "Memory usage is above 85% for more than 5 minutes on {{ $labels.instance }}"

      # Pod High CPU
      - alert: PodHighCPU
        expr: rate(container_cpu_usage_seconds_total{pod!=""}[5m]) * 100 > 80
        for: 5m
        labels:
          severity: warning
          service: application
        annotations:
          summary: "Pod {{ $labels.pod }} has high CPU usage"
          description: "Pod {{ $labels.pod }} in namespace {{ $labels.namespace }} has been using more than 80% CPU for more than 5 minutes"

      # Pod High Memory
      - alert: PodHighMemory
        expr: container_memory_working_set_bytes{pod!=""} / container_spec_memory_limit_bytes{pod!=""} * 100 > 85
        for: 5m
        labels:
          severity: warning
          service: application
        annotations:
          summary: "Pod {{ $labels.pod }} has high memory usage"
          description: "Pod {{ $labels.pod }} in namespace {{ $labels.namespace }} has been using more than 85% of its memory limit for more than 5 minutes"

      # API High Response Time
      - alert: APIHighResponseTime
        expr: histogram_quantile(0.95, rate(http_request_duration_seconds_bucket{job="insightlearn-api"}[5m])) > 1
        for: 5m
        labels:
          severity: warning
          service: api
        annotations:
          summary: "API response time is high"
          description: "95th percentile response time for InsightLearn API is above 1 second for more than 5 minutes"

      # API High Error Rate
      - alert: APIHighErrorRate
        expr: rate(http_requests_total{job="insightlearn-api",status=~"5.."}[5m]) / rate(http_requests_total{job="insightlearn-api"}[5m]) * 100 > 5
        for: 5m
        labels:
          severity: critical
          service: api
        annotations:
          summary: "API error rate is high"
          description: "InsightLearn API error rate is above 5% for more than 5 minutes"

      # Database Connection Issues
      - alert: DatabaseConnectionFailure
        expr: up{job=~"postgresql|mongodb|redis|elasticsearch"} == 0
        for: 2m
        labels:
          severity: critical
          service: database
        annotations:
          summary: "Database {{ $labels.job }} is down"
          description: "Database service {{ $labels.job }} has been unreachable for more than 2 minutes"

      # Pod Restart Frequency
      - alert: PodRestartFrequent
        expr: increase(kube_pod_container_status_restarts_total[1h]) > 3
        for: 5m
        labels:
          severity: warning
          service: application
        annotations:
          summary: "Pod {{ $labels.pod }} is restarting frequently"
          description: "Pod {{ $labels.pod }} in namespace {{ $labels.namespace }} has restarted more than 3 times in the last hour"

      # Disk Space Usage
      - alert: DiskSpaceUsage
        expr: (1 - (node_filesystem_avail_bytes{fstype!="tmpfs"} / node_filesystem_size_bytes{fstype!="tmpfs"})) * 100 > 85
        for: 5m
        labels:
          severity: warning
          service: infrastructure
        annotations:
          summary: "Disk space usage is high on {{ $labels.instance }}"
          description: "Disk usage is above 85% on {{ $labels.mountpoint }} on {{ $labels.instance }}"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: insightlearn-monitoring
  labels:
    app: prometheus
    component: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
        component: monitoring
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: prometheus
      securityContext:
        runAsUser: 65534
        runAsNonRoot: true
        fsGroup: 65534
      containers:
      - name: prometheus
        image: prom/prometheus:v2.48.0
        ports:
        - containerPort: 9090
          name: web
        args:
          - '--config.file=/etc/prometheus/prometheus.yml'
          - '--storage.tsdb.path=/prometheus/'
          - '--web.console.libraries=/etc/prometheus/console_libraries'
          - '--web.console.templates=/etc/prometheus/consoles'
          - '--storage.tsdb.retention.time=30d'
          - '--storage.tsdb.retention.size=10GB'
          - '--web.enable-lifecycle'
          - '--web.enable-admin-api'
          - '--web.route-prefix=/'
          - '--web.external-url=http://prometheus.insightlearn-monitoring.svc.cluster.local:9090'
        volumeMounts:
        - name: prometheus-config
          mountPath: /etc/prometheus/
        - name: prometheus-storage
          mountPath: /prometheus/
        resources:
          requests:
            memory: '1Gi'
            cpu: '500m'
          limits:
            memory: '2Gi'
            cpu: '1'
        livenessProbe:
          httpGet:
            path: /-/healthy
            port: 9090
          initialDelaySeconds: 30
          timeoutSeconds: 30
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /-/ready
            port: 9090
          initialDelaySeconds: 30
          timeoutSeconds: 30
          periodSeconds: 5
      volumes:
      - name: prometheus-config
        configMap:
          name: prometheus-config
      - name: prometheus-storage
        persistentVolumeClaim:
          claimName: prometheus-storage

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: prometheus-storage
  namespace: insightlearn-monitoring
  labels:
    app: prometheus
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
  storageClassName: standard

---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: insightlearn-monitoring
  labels:
    app: prometheus
    component: monitoring
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9090"
spec:
  ports:
  - name: web
    port: 9090
    targetPort: 9090
    protocol: TCP
  selector:
    app: prometheus
  type: ClusterIP